function Grid.new 3
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push argument 1
pop this 2
push this 1
call Array.new 1
pop this 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push this 2
call Array.new 1
pop local 0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push this 2
lt
not
if-goto WHILE_END1
push local 2
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 2
push constant 2
call Math.divide 2
pop local 2
push constant 0
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 2
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
return
function Grid.get_row 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function Grid.calculate_row 6
push argument 0
pop pointer 0
push argument 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 1
push constant 0
pop local 5
label WHILE_EXP0
push local 5
push this 2
lt
not
if-goto WHILE_END0
push local 5
push constant 0
eq
pop local 2
push local 5
push this 2
push constant 1
sub
eq
pop local 3
push local 2
push local 3
or
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 5
call Grid.check_rules 2
pop local 4
push local 4
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 5
push local 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
label IF_FALSE1
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push constant 0
return
function Grid.check_rules 4
push argument 1
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
push constant 1
eq
push argument 1
push argument 0
add
pop pointer 1
push that 0
push constant 0
eq
and
push argument 1
push constant 1
add
push argument 0
add
pop pointer 1
push that 0
push constant 0
eq
and
pop local 0
push argument 1
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
push constant 0
eq
push argument 1
push argument 0
add
pop pointer 1
push that 0
push constant 1
eq
and
push argument 1
push constant 1
add
push argument 0
add
pop pointer 1
push that 0
push constant 0
eq
and
pop local 1
push argument 1
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
push constant 0
eq
push argument 1
push argument 0
add
pop pointer 1
push that 0
push constant 0
eq
and
push argument 1
push constant 1
add
push argument 0
add
pop pointer 1
push that 0
push constant 1
eq
and
pop local 2
push argument 1
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
push constant 1
eq
push argument 1
push argument 0
add
pop pointer 1
push that 0
push constant 1
eq
and
push argument 1
push constant 1
add
push argument 0
add
pop pointer 1
push that 0
push constant 0
eq
and
pop local 3
push local 0
push local 1
or
push local 2
or
push local 3
or
return
function Grid.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
