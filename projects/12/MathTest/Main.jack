// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/MathTest/Main.jack

/** Test program for the OS Math class. */
class Main {

    /** Performs various mathematical operations, using calls to the Math class methods. */
    function void main() {
        var Array r;          // stores the test results;
        
        let r = 8000;
    


        /*
        Test Math.bit
        
        BIN     DEC     CALL            EXPECT
        0       0       Math.bit(0,0)   0
        0       0       Math.bit(0,1)   0
        0       0       Math.bit(0,2)   0
        0       0       Math.bit(0,3)   0

        1       1       Math.bit(1,0)   1
        1       1       Math.bit(1,1)   0
        1       1       Math.bit(1,2)   0
        1       1       Math.bit(1,3)   0
                
        10      2       Math.bit(2,0)   0
        10      2       Math.bit(2,1)   1
        10      2       Math.bit(2,2)   0
        10      2       Math.bit(2,3)   0

        11      3       Math.bit(3,0)   1
        11      3       Math.bit(3,1)   1
        11      3       Math.bit(3,2)   0
        11      3       Math.bit(3,3)   0

        100     4       Math.bit(4,0)   0
        100     4       Math.bit(4,1)   0
        100     4       Math.bit(4,2)   1
        100     4       Math.bit(4,3)   0

        101     5       Math.bit(5,0)   1
        101     5       Math.bit(5,1)   0
        101     5       Math.bit(5,2)   1
        101     5       Math.bit(5,3)   0

        110     6       Math.bit(6,0)   0
        110     6       Math.bit(6,1)   1
        110     6       Math.bit(6,2)   1
        110     6       Math.bit(6,3)   0
        GOOD

        111     7       Math.bit(7,0)   1
        111     7       Math.bit(7,1)   1
        111     7       Math.bit(7,2)   1
        111     7       Math.bit(7,3)   0

        1000    8       Math.bit(8,0)   0
        1000    8       Math.bit(8,1)   0
        1000    8       Math.bit(8,2)   0
        1000    8       Math.bit(8,3)   1


        */

        // do Output.printInt(Math.bit(0,0));do Output.println();
        // do Output.printInt(Math.bit(0,1));do Output.println();
        // do Output.printInt(Math.bit(0,2));do Output.println();
        // do Output.printInt(Math.bit(0,3));do Output.println();
        // do Output.println();
        // do Output.printInt(Math.bit(1,0));do Output.println();
        // do Output.printInt(Math.bit(1,1));do Output.println();
        // do Output.printInt(Math.bit(1,2));do Output.println();
        // do Output.printInt(Math.bit(1,3));do Output.println();
        // do Output.println();
        // do Output.printInt(Math.bit(2,0));do Output.println();
        // do Output.printInt(Math.bit(2,1));do Output.println();
        // do Output.printInt(Math.bit(2,2));do Output.println();
        // do Output.printInt(Math.bit(2,3));do Output.println();
        // do Output.println();
        // do Output.printInt(Math.bit(3,0));do Output.println();
        // do Output.printInt(Math.bit(3,1));do Output.println();
        // do Output.printInt(Math.bit(3,2));do Output.println();
        // do Output.printInt(Math.bit(3,3));do Output.println();
        // do Output.println();
        // do Output.printInt(Math.bit(4,0));do Output.println();
        // do Output.printInt(Math.bit(4,1));do Output.println();
        // do Output.printInt(Math.bit(4,2));do Output.println();
        // do Output.printInt(Math.bit(4,3));do Output.println();
        // do Output.println();
        // do Output.printInt(Math.bit(5,0));do Output.println();
        // do Output.printInt(Math.bit(5,1));do Output.println();
        // do Output.printInt(Math.bit(5,2));do Output.println();
        // do Output.printInt(Math.bit(5,3));do Output.println();
        // do Output.println();
        // do Output.printInt(Math.bit(6,0));do Output.println();
        // do Output.printInt(Math.bit(6,1));do Output.println();
        // do Output.printInt(Math.bit(6,2));do Output.println();
        // do Output.printInt(Math.bit(6,3));do Output.println();
        // do Output.println();
        // do Output.printInt(Math.bit(7,0));do Output.println();
        // do Output.printInt(Math.bit(7,1));do Output.println();
        // do Output.printInt(Math.bit(7,2));do Output.println();
        // do Output.printInt(Math.bit(7,3));do Output.println();
        // do Output.println();
        // do Output.printInt(Math.bit(8,0));do Output.println();
        // do Output.printInt(Math.bit(8,1));do Output.println();
        // do Output.printInt(Math.bit(8,2));do Output.println();
        // do Output.printInt(Math.bit(8,3));do Output.println();

        let r[0] = 2 * 3;                  // 6
        let r[1] = r[0] * (-30);           // 6 * (-30) = -180
        let r[2] = r[1] * 100;             // (-180) * 100 = -18000
        let r[3] = 1 * r[2];               // 1 * (-18000) = -18000
        let r[4] = r[3] * 0;               // 0
        
        let r[5] = 9 / 3;                  // 3
        let r[6] = (-18000) / 6;           // -3000
        let r[7] = 32766 / (-32767);       // 0
        
        let r[8] = Math.sqrt(9);           // 3
        let r[9] = Math.sqrt(32767);       // 181
        
        let r[10] = Math.min(345, 123);    // 123
        let r[11] = Math.max(123, -345);   // 123
        let r[12] = Math.abs(27);          // 27
        let r[13] = Math.abs(-32767);      // 32767
        
        return;
    }
}
